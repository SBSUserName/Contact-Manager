{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","a","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","name","email","phone","className","onClick","style","cursor","float","color","to","marginRight","Contacts","Fragment","Header","branding","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","bind","EditContact","updContact","match","params","put","About","NotFound","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31138f58.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"DELETE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    (contact) => contact.id !== action.payload\r\n                ),\r\n            };\r\n        case \"ADD_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case \"UPDATE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? contact = action.payload : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: (action) => {\r\n            this.setState((state) => reducer(state, action));\r\n        },\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios\r\n        .get('https://jsonplaceholder.typicode.com/users')\r\n            \r\n        this.setState({ contacts: res.data });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class Contact extends Component {\r\n    state = {\r\n        showContactInfo: false,\r\n    };\r\n\r\n    onShowClick = () => {\r\n        this.setState({ showContactInfo: !this.state.showContactInfo });\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        await axios\r\n        .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n\r\n        dispatch({type: 'DELETE_CONTACT', payload: id})\r\n            \r\n    };\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {(value) => {\r\n                    const { dispatch } = value\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name}{\" \"}\r\n                                <i\r\n                                    onClick={this.onShowClick}\r\n                                    className=\"fas fa-sort-down\"\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                ></i>\r\n                                <i\r\n                                    className=\"fas fa-times\"\r\n                                    style={{\r\n                                        cursor: \"pointer\",\r\n                                        float: \"right\",\r\n                                        color: \"red\",\r\n                                    }}\r\n                                    onClick={() => this.onDeleteClick(id, dispatch)}\r\n                                ></i>\r\n\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i \r\n                                        className=\"fas fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            float: \"right\",\r\n                                            color: \"black\",\r\n                                            marginRight: \"1rem\"\r\n                                        }}\r\n                                        ></i>\r\n                                </Link>        \r\n                            </h4>\r\n                            {showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">\r\n                                        Email: {email}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Phone: {phone}\r\n                                    </li>\r\n                                </ul>\r\n                            ) : null}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nexport default class Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {(value) => {\r\n                    const { contacts } = value;\r\n\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span> List\r\n                            </h1>\r\n                            {contacts.map((contact) => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand\">{branding}</Link>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"></i> Home\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                            <i className=\"fas fa-plus\"></i> Add\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                            <i className=\"fas fa-question\"></i> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App\",\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': error\r\n                })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error &&\r\n                <div className=\"invalid-feedback\">\r\n                    {error}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nexport default class AddContact extends Component {\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        errors: {}\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check for errors\r\n        if(name === '') {\r\n            this.setState({ errors: {name: 'Name is required'} })\r\n            return\r\n        }\r\n\r\n        if(email === '') {\r\n            this.setState({ errors: {email: 'Email is required'} })\r\n            return\r\n        }\r\n\r\n        if(phone === '') {\r\n            this.setState({ errors: {phone: 'Phone is required'} })\r\n            return\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const res = await axios\r\n        .post('https://jsonplaceholder.typicode.com/users', newContact)\r\n            \r\n        dispatch({type: 'ADD_CONTACT', payload: res.data})\r\n\r\n        \r\n        this.setState({\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {(value) => {\r\n                    const { dispatch } = value;\r\n\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Add Contact\"\r\n                                        className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nexport default class EditContact extends Component {\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check for errors\r\n        if(name === '') {\r\n            this.setState({ errors: {name: 'Name is required'} })\r\n            return\r\n        }\r\n\r\n        if(email === '') {\r\n            this.setState({ errors: {email: 'Email is required'} })\r\n            return\r\n        }\r\n\r\n        if(phone === '') {\r\n            this.setState({ errors: {phone: 'Phone is required'} })\r\n            return\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        \r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data})\r\n\r\n        \r\n        this.setState({\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {(value) => {\r\n                    const { dispatch } = value;\r\n\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Edit Contact\"\r\n                                        className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p>Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\"\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n    return (\n        <Provider>\n            <Router>\n            <div className=\"App\">\n                <Header branding=\"Contact Manager\" />\n                <div className=\"container\">\n                    <Switch>\n                        <Route exact path=\"/\" component={Contacts} />\n                        <Route exact path=\"/contact/add\" component={AddContact} />\n                        <Route exact path=\"/about\" component={About} />\n                        <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                        <Route component={NotFound} />\n                    </Switch>\n                </div>\n            </div>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}